<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fang.DAO.RefreshConsumptionMapper">
  <resultMap id="BaseResultMap" type="com.fang.model.RefreshConsumption">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="refreshPlanId" jdbcType="INTEGER" property="refreshplanid" />
    <result column="caseId" jdbcType="INTEGER" property="caseid" />
    <result column="companyId" jdbcType="INTEGER" property="companyid" />
    <result column="refreshType" jdbcType="VARCHAR" property="refreshtype" />
    <result column="refreshTime" jdbcType="TIMESTAMP" property="refreshtime" />
    <result column="soufunId" jdbcType="INTEGER" property="soufunid" />
    <result column="createTime" jdbcType="TIME" property="createtime" />
    <result column="isDel" jdbcType="BIT" property="isdel" />
  </resultMap>

  <resultMap id="AssociatedSelectResultMap" type="com.fang.model.RefreshConsumptionCus">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="refreshPlanId" jdbcType="INTEGER" property="refreshplanid" />
    <result column="caseId" jdbcType="INTEGER" property="caseid" />
    <result column="companyId" jdbcType="INTEGER" property="companyid" />
    <result column="refreshType" jdbcType="VARCHAR" property="refreshtype" />
    <result column="refreshTime" jdbcType="TIMESTAMP" property="refreshtime" />
    <result column="soufunId" jdbcType="INTEGER" property="soufunid" />
    <result column="createTime" jdbcType="TIME" property="createtime" />
    <result column="isDel" jdbcType="BIT" property="isdel" />
    <result column="refreshPlan_state" jdbcType="VARCHAR" property="refreshPlanState" />
    <result column="refreshPlan_remark" jdbcType="VARCHAR" property="refreshPlanRemark" />
  </resultMap>

  <resultMap id="AssociatedSelectResultMapPages" type="com.fang.model.RefreshConsumptionCus">

    <result column="count" jdbcType="INTEGER" property="count" />

    <collection property="list" resultMap="BaseResultMap">
      <id column="id" jdbcType="INTEGER" property="id" />
      <result column="refreshPlanId" jdbcType="INTEGER" property="refreshplanid" />
      <result column="caseId" jdbcType="INTEGER" property="caseid" />
      <result column="companyId" jdbcType="INTEGER" property="companyid" />
      <result column="refreshType" jdbcType="VARCHAR" property="refreshtype" />
      <result column="refreshTime" jdbcType="TIMESTAMP" property="refreshtime" />
      <result column="soufunId" jdbcType="INTEGER" property="soufunid" />
      <result column="createTime" jdbcType="TIME" property="createtime" />
      <result column="isDel" jdbcType="BIT" property="isdel" />
      <result column="refreshPlan_state" jdbcType="VARCHAR" property="refreshPlanState" />
      <result column="refreshPlan_remark" jdbcType="VARCHAR" property="refreshPlanRemark" />
    </collection>
    <!--<association property="list" resultMap="BaseResultMap">-->
      <!--<id column="id" jdbcType="INTEGER" property="id" />-->
      <!--<result column="refreshPlanId" jdbcType="INTEGER" property="refreshplanid" />-->
      <!--<result column="caseId" jdbcType="INTEGER" property="caseid" />-->
      <!--<result column="companyId" jdbcType="INTEGER" property="companyid" />-->
      <!--<result column="refreshType" jdbcType="VARCHAR" property="refreshtype" />-->
      <!--<result column="refreshTime" jdbcType="TIMESTAMP" property="refreshtime" />-->
      <!--<result column="soufunId" jdbcType="INTEGER" property="soufunid" />-->
      <!--<result column="createTime" jdbcType="TIME" property="createtime" />-->
      <!--<result column="isDel" jdbcType="BIT" property="isdel" />-->
      <!--<result column="refreshPlan_state" jdbcType="VARCHAR" property="refreshPlanState" />-->
      <!--<result column="refreshPlan_remark" jdbcType="VARCHAR" property="refreshPlanRemark" />-->
    <!--</association>-->

  </resultMap>

  <sql id="Base_Column_List">
    id, refreshPlanId, caseId, companyId, refreshType, refreshTime, soufunId, createTime, 
    isDel
  </sql>

  <sql id="Base_Column_List_Associated">
    refreshConsumption.id, refreshConsumption.refreshPlanId, refreshConsumption.caseId, refreshConsumption.companyId, refreshConsumption.refreshType, refreshConsumption.refreshTime, refreshConsumption.soufunId, refreshConsumption.createTime,
    refreshConsumption.isDel,refreshPlan.state AS refreshPlan_state,refreshPlan.remark AS refreshPlan_remark
  </sql>

  <sql id="Base_Column_List_Associated_pages">
--     COUNT(refreshConsumption.id) AS count,
    refreshConsumption.id, refreshConsumption.refreshPlanId, refreshConsumption.caseId, refreshConsumption.companyId, refreshConsumption.refreshType, refreshConsumption.refreshTime, refreshConsumption.soufunId, refreshConsumption.createTime,
    refreshConsumption.isDel,refreshPlan.state AS refreshPlan_state,refreshPlan.remark AS refreshPlan_remark
  </sql>
  <!--关联表的筛选查找 查找相应公司的消费记录 输入的是 公司的id 输出的是两个表的内容 每一条消费记录 以及消费记录所对应的消费的刷新plan的详细信息-->
  <select id="selectAssociatedByCompanyId" parameterType="java.lang.Integer" resultMap="AssociatedSelectResultMap">
    select
    <include refid="Base_Column_List_Associated" />
    from refreshConsumption,refreshPlan
      WHERE refreshConsumption.companyId = #{id,jdbcType=INTEGER} AND refreshConsumption.refreshPlanId = refreshPlan.id

  </select>

  <!--关联表的筛选查找 获取总数-->
  <select id="selectAssociatedCountByCompanyId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select count(*) as count from
(select refreshConsumption.id,refreshConsumption.refreshPlanId,refreshConsumption.caseId,refreshConsumption.companyId,refreshConsumption.refreshType,refreshConsumption.refreshTime,refreshConsumption.soufunId,refreshConsumption.createTime,refreshConsumption.isDel,refreshPlan.state,refreshPlan.remark from refreshConsumption,refreshPlan where refreshConsumption.refreshPlanId = refreshPlan.id and refreshConsumption.companyId=#{companyId,jdbcType=INTEGER})
as table1
  </select>

  <!--关联表的筛选查找 分页查找 包含总数-->
  <select id="selectAssociatedByCompanyIdPages" parameterType="HashMap" resultMap="AssociatedSelectResultMap">
    select
    <include refid="Base_Column_List_Associated_pages" />
    from refreshConsumption,refreshPlan
    WHERE refreshConsumption.companyId = #{companyId,jdbcType=INTEGER} AND refreshConsumption.refreshPlanId = refreshPlan.id
    limit #{fromIndex,jdbcType=INTEGER},#{toIndex,jdbcType=INTEGER}
  </select>



  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from refreshConsumption
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from refreshConsumption
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fang.model.RefreshConsumption">
    insert into refreshConsumption (id, refreshPlanId, caseId, 
      companyId, refreshType, refreshTime, 
      soufunId, createTime, isDel
      )
    values (#{id,jdbcType=INTEGER}, #{refreshplanid,jdbcType=INTEGER}, #{caseid,jdbcType=INTEGER}, 
      #{companyid,jdbcType=INTEGER}, #{refreshtype,jdbcType=VARCHAR}, #{refreshtime,jdbcType=TIMESTAMP}, 
      #{soufunid,jdbcType=INTEGER}, #{createtime,jdbcType=TIME}, #{isdel,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fang.model.RefreshConsumption">
    insert into refreshConsumption
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="refreshplanid != null">
        refreshPlanId,
      </if>
      <if test="caseid != null">
        caseId,
      </if>
      <if test="companyid != null">
        companyId,
      </if>
      <if test="refreshtype != null">
        refreshType,
      </if>
      <if test="refreshtime != null">
        refreshTime,
      </if>
      <if test="soufunid != null">
        soufunId,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="isdel != null">
        isDel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="refreshplanid != null">
        #{refreshplanid,jdbcType=INTEGER},
      </if>
      <if test="caseid != null">
        #{caseid,jdbcType=INTEGER},
      </if>
      <if test="companyid != null">
        #{companyid,jdbcType=INTEGER},
      </if>
      <if test="refreshtype != null">
        #{refreshtype,jdbcType=VARCHAR},
      </if>
      <if test="refreshtime != null">
        #{refreshtime,jdbcType=TIMESTAMP},
      </if>
      <if test="soufunid != null">
        #{soufunid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIME},
      </if>
      <if test="isdel != null">
        #{isdel,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fang.model.RefreshConsumption">
    update refreshConsumption
    <set>
      <if test="refreshplanid != null">
        refreshPlanId = #{refreshplanid,jdbcType=INTEGER},
      </if>
      <if test="caseid != null">
        caseId = #{caseid,jdbcType=INTEGER},
      </if>
      <if test="companyid != null">
        companyId = #{companyid,jdbcType=INTEGER},
      </if>
      <if test="refreshtype != null">
        refreshType = #{refreshtype,jdbcType=VARCHAR},
      </if>
      <if test="refreshtime != null">
        refreshTime = #{refreshtime,jdbcType=TIMESTAMP},
      </if>
      <if test="soufunid != null">
        soufunId = #{soufunid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIME},
      </if>
      <if test="isdel != null">
        isDel = #{isdel,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fang.model.RefreshConsumption">
    update refreshConsumption
    set refreshPlanId = #{refreshplanid,jdbcType=INTEGER},
      caseId = #{caseid,jdbcType=INTEGER},
      companyId = #{companyid,jdbcType=INTEGER},
      refreshType = #{refreshtype,jdbcType=VARCHAR},
      refreshTime = #{refreshtime,jdbcType=TIMESTAMP},
      soufunId = #{soufunid,jdbcType=INTEGER},
      createTime = #{createtime,jdbcType=TIME},
      isDel = #{isdel,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>